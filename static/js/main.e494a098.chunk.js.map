{"version":3,"sources":["images/mytube.png","Components/Search/Search.js","Components/VideoDetail/VideoDetail.js","Components/VideoList/VideoList.js","configs/youtube.js","Components/VideoItem/VideoItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","state","term","handleOnChange","e","setState","target","value","handleOnSubmit","event","preventDefault","props","searchVideo","className","class","href","src","mytube","alt","id","onSubmit","this","style","width","type","placeholder","onChange","React","Component","VideoDetail","idVideo","description","height","frameborder","allow","allowfullscreen","VideoList","children","axios","create","baseURL","params","part","maxResults","key","VideoItem","onClick","App","videos","listVideo","componentDidMount","a","async","youtube","get","q","RESPONSE","data","items","videoId","snippet","map","el","thumbnails","high","url","handleVideoOnClick","onMouseDown","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e494a098.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mytube.ebfecc3a.png\";","import React from \"react\";\nimport mytube from \"../../images/mytube.png\";\n\nclass Search extends React.Component {\n  state = {\n    term: \"\"\n  };\n\n  handleOnChange = e => {\n    this.setState({\n      term: e.target.value\n    });\n  };\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    let term = this.state.term;\n    this.props.searchVideo(term);\n    // console.log(term);\n  };\n\n  render() {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-lg shadow navbar-light bg-light col-12 mx-auto mb-3 py-3 position-fixed\">\n          <a class=\"navbar-brand\" href=\"#\">\n            <img className=\"mytube\" src={mytube} alt=\"\"></img>\n          </a>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <form className=\"form-inline w-100\" onSubmit={this.handleOnSubmit}>\n              <input\n                style={{ width: \"inherit\" }}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"exampleFormControlInput1\"\n                placeholder=\"Search ...\"\n                value={this.state.term}\n                onChange={this.handleOnChange}\n              ></input>\n            </form>\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\n\nclass VideoDetail extends React.Component {\n  render() {\n    const { idVideo, description } = this.props;\n\n    return (\n      <div className=\"col-8 float-left\">\n        <div className=\"card col-7 videoDetail mx-auto text-center border-0 bg-light shadow position-fixed\">\n          <div className=\"card-body\">\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${idVideo}`}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n            <p className=\"card-text\">{description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VideoDetail;\n","import React from \"react\";\n\nclass VideoList extends React.Component {\n  render() {\n    return (\n        <div className=\"col-4 float-right sideBar\">\n            {this.props.children}\n        </div>\n    )\n  }\n}\n\nexport default VideoList;\n","import axios from \"axios\";\n\nconst KEY = \"AIzaSyAnDzEfz1q5C_YNQ5P1fadWCo6dFJdOoyc\";\n\nexport default axios.create({\n    baseURL: \"https://www.googleapis.com/youtube/v3\",\n    params: {\n        part: \"snippet\",\n        maxResults: 5,\n        key: KEY\n    }\n});","import React from \"react\";\n\nclass VideoItem extends React.Component {\n  render() {\n    const { idVideo, description, onClick, src } = this.props;\n    return (\n      <>\n        <div onClick={onClick} idVideo={idVideo} className=\"card mb-3 border-0 shadow videoItem\">\n          <img src={src} className=\"card-img-top\" alt=\"...\"></img>\n          <div className=\"card-body\">\n            <p className=\"card-text\">\n              {description}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoItem;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Search from \"./Components/Search/Search\";\nimport VideoDetail from \"./Components/VideoDetail/VideoDetail\";\nimport VideoList from \"./Components/VideoList/VideoList\";\n\nimport youtube from \"./configs/youtube\"; // youtube = axios\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport VideoItem from \"./Components/VideoItem/VideoItem\";\n\nclass App extends React.Component {\n  state = {\n    videos: [],\n    description: \"\",\n    listVideo: []\n  };\n\n  componentDidMount = async () => {\n    const RESPONSE = await youtube.get(\"/search\", {\n      params: {\n        q: \"React.js\"\n      }\n    });\n    const idVideo = RESPONSE.data.items[0].id.videoId;\n    const description = RESPONSE.data.items[0].snippet.description;\n\n    // console.log(RESPONSE.data.items[0].etag)\n\n    const listVideo = RESPONSE.data.items.map(el => {\n\n      let { src, description, idVideo } = this.props;\n\n      src = el.snippet.thumbnails.high.url;\n      description = el.snippet.description;\n      idVideo = el.id.videoId;\n\n      return (\n        <VideoItem\n          onClick={() => this.handleVideoOnClick(idVideo, description)}\n          idVideo={idVideo}\n          src={src}\n          description={description}\n        />\n      );\n    });\n\n    this.setState({\n      videos: idVideo,\n      description: description,\n      listVideo: listVideo\n    });\n  };\n\n  searchVideo = async term => {\n    const RESPONSE = await youtube.get(\"/search\", {\n      params: {\n        q: term\n      }\n    });\n\n    const idVideo = RESPONSE.data.items[0].id.videoId;\n    const description = RESPONSE.data.items[0].snippet.description;\n\n    const listVideo = RESPONSE.data.items.map(el => {\n\n      let { src, description, idVideo } = this.props;\n\n      src = el.snippet.thumbnails.high.url;\n      description = el.snippet.description;\n      idVideo = el.id.videoId;\n\n      return (\n        <VideoItem\n          onClick={() => this.handleVideoOnClick(idVideo, description)}\n          idVideo={idVideo}\n          src={src}\n          description={description}\n        />\n      );\n    });\n\n    this.setState({\n      videos: idVideo,\n      description: description,\n      listVideo: listVideo\n    });\n  };\n\n  handleVideoOnClick = (idVideo, description) => {\n    this.setState({\n      videos: idVideo,\n      description: description,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"container-fluid\">\n          <div className=\"row\">\n            <Search searchVideo={this.searchVideo} />\n          </div>\n        </header>\n        <main className=\"container-fluid\">\n          <div className=\"row\">\n            <VideoDetail\n              idVideo={this.state.videos}\n              description={this.state.description}\n            />\n            <VideoList onMouseDown={this.handleVideoOnClick}>\n              {this.state.listVideo}\n            </VideoList>\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}